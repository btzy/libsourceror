import { get_time, display as ffi_display, prompt as ffi_prompt, abort, parse_int, stringify_float } from "misc.ffi";

const Infinity = 1 / 0;
const NaN = 0 * Infinity;
const undefined = (() => {})();

__attributes = "direct";
function display(v) {
    ffi_display(stringify(v));
    return v;
}
__attributes = "direct;constraint=s:string";
function display(v, s) {
    ffi_display(s + " " + stringify(v));
    return v;
}
__attributes = "direct";
function error(v) {
    ffi_display(stringify(v));
    abort();
}
__attributes = "direct;constraint=s:string";
function error(v, s) {
    ffi_display(s + " " + stringify(v));
    abort();
}

__attributes = "direct";
function is_undefined(v) {
    return false;
}
__attributes = "direct;constraint=v:undefined";
function is_undefined(v) {
    return true;
}
__attributes = "direct";
function is_boolean(v) {
    return false;
}
__attributes = "direct;constraint=v:boolean";
function is_boolean(v) {
    return true;
}
__attributes = "direct";
function is_number(v) {
    return false;
}
__attributes = "direct;constraint=v:number";
function is_number(v) {
    return true;
}
__attributes = "direct";
function is_string(v) {
    return false;
}
__attributes = "direct;constraint=v:string";
function is_string(v) {
    return true;
}
__attributes = "direct";
function is_function(v) {
    return false;
}
__attributes = "direct;constraint=v:function";
function is_function(v) {
    return true;
}

__attributes = "direct;constraint=s:string";
function prompt(s) {
    let ret = ffi_prompt(s);
    return ret === "\0" ? undefined : ret;
}

/*function stringify_number(v) {
    if (v === 0) {
        return "";
    } else {
        const d = v % 10;
        return stringify_number((v - d) / 10) +
            (
                d === 0 ? "0" :
                d === 1 ? "1" :
                d === 2 ? "2" :
                d === 3 ? "3" :
                d === 4 ? "4" :
                d === 5 ? "5" :
                d === 6 ? "6" :
                d === 7 ? "7" :
                d === 8 ? "8" :
                          "9"
            );
    }
}*/

__attributes = "direct";
function stringify(v) {
    return "(unstringifiable type)";
}
__attributes = "direct;constraint=v:undefined";
function stringify(v) {
    return "undefined";
}
__attributes = "direct;constraint=v:boolean";
function stringify(v) {
    return v ? "true" : "false";
}
__attributes = "direct;constraint=v:number";
function stringify(v) {
    return stringify_float(v);
}
__attributes = "direct;constraint=v:string";
function stringify(v) {
    return "\"" + v + "\"";
}
__attributes = "direct;constraint=v:function";
function stringify(v) {
    return "(function)";
}

export {
    Infinity, NaN, undefined,
    is_undefined, is_boolean, is_number, is_string, is_function,
    stringify,
    get_time,
    display, error, prompt,
    parse_int };
